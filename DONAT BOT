import asyncio
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
import os

# ==== –ù–ê–°–¢–†–û–ô–ö–ò ====
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

games = {
    "arena": {
        "name": "üèü –ê—Ä–µ–Ω–∞ Breakout",
        "photo": "https://ibb.co/h1VcmKg7",
        "prices": [
            ("–û–±–ª–∏–≥–∞—Ü–∏–∏ 100", "10 000 —Å—É–º"),
            ("–û–±–ª–∏–≥–∞—Ü–∏–∏ 200", "18 000 —Å—É–º"),
            ("–û–±–ª–∏–≥–∞—Ü–∏–∏ 500", "40 000 —Å—É–º")
        ]
    },
    "standoff": {
        "name": "üî´ Standoff 2",
        "photo": "https://ibb.co/k60N6yzD",
        "prices": [
            ("–ì–æ–ª–¥–∞ 100", "10 000 —Å—É–º"),
            ("–ì–æ–ª–¥–∞ 500", "45 000 —Å—É–º")
        ]
    },
    "roblox": {
        "name": "üéÆ Roblox",
        "photo": "https://ibb.co/2YdZMRz6",
        "prices": [
            ("Robux 100", "10 000 —Å—É–º"),
            ("Robux 500", "45 000 —Å—É–º")
        ]
    },
    "pubg": {
        "name": "üéØ PUBG Mobile",
        "photo": "https://ibb.co/VYkg61V0",
        "prices": [
            ("UC 100", "10 000 —Å—É–º"),
            ("UC 500", "45 000 —Å—É–º")
        ]
    },
    "genshin": {
        "name": "‚ú® Genshin Impact",
        "photo": "https://ibb.co/mVFmFMb6",
        "prices": [
            ("–ü—Ä–∏–º–æ–≥–µ–º—ã 100", "10 000 —Å—É–º"),
            ("–ü—Ä–∏–º–æ–≥–µ–º—ã 500", "45 000 —Å—É–º")
        ]
    },
    "ml": {
        "name": "‚öî Mobile Legends",
        "photo": "https://ibb.co/Z6xydR7p",
        "prices": [
            ("–ê–ª–º–∞–∑—ã 100", "10 000 —Å—É–º"),
            ("–ê–ª–º–∞–∑—ã 500", "45 000 —Å—É–º")
        ]
    },
    "ff": {
        "name": "üî• Free Fire",
        "photo": "https://ibb.co/pjKdS9Q5",
        "prices": [
            ("–ê–ª–º–∞–∑—ã 100", "10 000 —Å—É–º"),
            ("–ê–ª–º–∞–∑—ã 500", "45 000 —Å—É–º")
        ]
    }
}

dp = Dispatcher()

def main_menu():
    buttons = [
        [InlineKeyboardButton(text=game["name"], callback_data=f"game_{key}")]
        for key, game in games.items()
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer("üéÆ –í—ã–±–µ—Ä–∏ –∏–≥—Ä—É:", reply_markup=main_menu())

@dp.callback_query(lambda c: c.data.startswith("game_"))
async def show_game(callback: types.CallbackQuery):
    await callback.answer()  # —É–±–∏—Ä–∞–µ—Ç "–∑–∞–≥—Ä—É–∑–∫—É"

    game_key = callback.data.split("_", 1)[1]
    game = games[game_key]

    text = f"{game['name']}\n\n"
    for currency, price in game["prices"]:
        text += f"üí∞ {currency} ‚Äî {price}\n"

    back_kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üîô –ú–µ–Ω—é", callback_data="back")]
        ]
    )

    await callback.message.answer_photo(
        photo=game["photo"],
        caption=text,
        reply_markup=back_kb
    )

@dp.callback_query(lambda c: c.data == "back")
async def back_to_menu(callback: types.CallbackQuery):
    await callback.answer()  # —É–±–∏—Ä–∞–µ—Ç "–∑–∞–≥—Ä—É–∑–∫—É"
    await callback.message.answer("üéÆ –í—ã–±–µ—Ä–∏ –∏–≥—Ä—É:", reply_markup=main_menu())

async def main():
    bot = Bot(token=TOKEN)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())












